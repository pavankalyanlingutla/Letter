# Project Contributions

## Team Members

1. Pradyumn Mohta
   - Implemented the runtime environment (runtime.py) for executing the Abstract Syntax Tree
   - Developed features for:
     - Variable management and arithmetic operations
     - Control structures (if-else, loops)
     - Function handling and scope management
     - Stack and Queue operations
   - Debugged and fixed execution issues in runtime
   - Created comprehensive test cases for all features

2. Pavan Kalyan Lingutla
   - Designed and implemented the lexical analyzer (lexer) in lexer_parser.py
   - Developed token definitions and processing for:
     - Keywords and identifiers
     - Operators and special characters
     - String literals and comments
   - Implemented error handling for invalid tokens
   - Created test cases for lexical analysis

3. Arushi Shah
   - Implemented the parser component in lexer_parser.py
   - Developed parsing logic for:
     - Expressions and statements
     - Array operations and string handling
     - Control structures and functions
   - Created the AST (Abstract Syntax Tree) structure
   - Wrote documentation and test files
   - Integrated lexer with parser components

## Collaborative Work
- All team members contributed to:
  - Debugging and testing the complete system
  - Writing test cases for different features
  - Reviewing each other's code
  - Maintaining project documentation
